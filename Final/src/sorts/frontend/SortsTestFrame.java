package sorts.frontend;

import java.awt.Color;
import javax.swing.JOptionPane;

public class SortsTestFrame extends javax.swing.JFrame
{
    private SortsTestController<Integer> stcInt = new SortsTestController<>(Integer.class);
    private SortsTestController<String> stcStr = new SortsTestController<>(String.class);
    
    public SortsTestFrame()
    {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        algorithimChoice = new javax.swing.JComboBox<>();
        algorithimLabel = new javax.swing.JLabel();
        listTypeLabel = new javax.swing.JLabel();
        listTypeBox = new javax.swing.JComboBox<>();
        numElementsSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        numElementsTextBox = new javax.swing.JTextField();
        integerRButton = new javax.swing.JRadioButton();
        stringRButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        getListBtn = new javax.swing.JButton();
        sortSearchButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultsTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algorithim Comparator");
        setBackground(new java.awt.Color(0, 0, 0));

        algorithimChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bubble Sort", "Insertion Sort", "Merge Sort", "Quick Sort", "Heap Sort (Array Only)", "Linear Search", "Binary Search", "Hash Search (Array Only)" }));
        algorithimChoice.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                algorithimChoiceItemStateChanged(evt);
            }
        });
        algorithimChoice.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                algorithimChoiceActionPerformed(evt);
            }
        });

        algorithimLabel.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        algorithimLabel.setText("Algorithim");

        listTypeLabel.setFont(algorithimLabel.getFont());
        listTypeLabel.setText("List Type");

        listTypeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sorted", "Reversed", "Random", "Near Sorted", "Duplicates" }));

        numElementsSlider.setMajorTickSpacing(2000);
        numElementsSlider.setMaximum(10000);
        numElementsSlider.setMinorTickSpacing(10);
        numElementsSlider.setPaintLabels(true);
        numElementsSlider.setPaintTicks(true);
        numElementsSlider.setSnapToTicks(true);
        numElementsSlider.setToolTipText("Choose number of elements for the list.");
        numElementsSlider.setValue(0);
        numElementsSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        numElementsSlider.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                numElementsSliderStateChanged(evt);
            }
        });

        jLabel1.setFont(algorithimLabel.getFont());
        jLabel1.setText("Num Elements: ");

        numElementsTextBox.setEditable(false);
        numElementsTextBox.setBackground(java.awt.Color.lightGray);
        numElementsTextBox.setForeground(new java.awt.Color(0, 0, 0));
        numElementsTextBox.setSelectedTextColor(new java.awt.Color(255, 255, 255));

        buttonGroup1.add(integerRButton);
        integerRButton.setSelected(true);
        integerRButton.setText("Integer");

        buttonGroup1.add(stringRButton);
        stringRButton.setText("String");

        jLabel2.setFont(algorithimLabel.getFont());
        jLabel2.setText("Data Type:");

        outputTextArea.setEditable(false);
        outputTextArea.setBackground(java.awt.Color.lightGray);
        outputTextArea.setColumns(6);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        inputTextArea.setEditable(false);
        inputTextArea.setBackground(java.awt.Color.lightGray);
        inputTextArea.setColumns(10);
        inputTextArea.setRows(5);
        jScrollPane2.setViewportView(inputTextArea);

        jLabel4.setFont(algorithimLabel.getFont());
        jLabel4.setText("Output");

        getListBtn.setText("Get List");
        getListBtn.setToolTipText("Fills the input box with the specified paramaters.");
        getListBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                getListBtnActionPerformed(evt);
            }
        });

        sortSearchButton.setText("Sort/Search");
        sortSearchButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                sortSearchButtonActionPerformed(evt);
            }
        });

        resultsTextArea.setEditable(false);
        resultsTextArea.setBackground(java.awt.Color.lightGray);
        resultsTextArea.setColumns(20);
        resultsTextArea.setRows(5);
        jScrollPane3.setViewportView(resultsTextArea);

        jLabel5.setFont(algorithimLabel.getFont());
        jLabel5.setText("Results");

        jLabel6.setFont(algorithimLabel.getFont());
        jLabel6.setText("Input");

        searchTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listTypeLabel)
                            .addComponent(listTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numElementsTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addComponent(numElementsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(integerRButton)
                        .addGap(18, 18, 18)
                        .addComponent(stringRButton)
                        .addGap(22, 22, 22)
                        .addComponent(getListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(algorithimLabel)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sortSearchButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(algorithimChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(listTypeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numElementsTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numElementsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(integerRButton)
                            .addComponent(stringRButton)
                            .addComponent(jLabel2)
                            .addComponent(getListBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(algorithimLabel)
                            .addComponent(algorithimChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sortSearchButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numElementsSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_numElementsSliderStateChanged
    {//GEN-HEADEREND:event_numElementsSliderStateChanged
        numElementsTextBox.setText(String.valueOf(numElementsSlider.getValue()) + " elements");
    }//GEN-LAST:event_numElementsSliderStateChanged

    private void getListBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_getListBtnActionPerformed
    {//GEN-HEADEREND:event_getListBtnActionPerformed
        int listType = listTypeBox.getSelectedIndex();
        int numElements = numElementsSlider.getValue();
        
        String input;
        
        if (integerRButton.isSelected())
            input = stcInt.getList(listType, numElements);
        else
            input = stcStr.getList(listType, numElements);
        
        inputTextArea.setText(input);
    }//GEN-LAST:event_getListBtnActionPerformed

    private void algorithimChoiceItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_algorithimChoiceItemStateChanged
    {//GEN-HEADEREND:event_algorithimChoiceItemStateChanged
        int choice = algorithimChoice.getSelectedIndex();
        
        if (choice > 4)
        {
            searchTextField.setBackground(Color.WHITE);
            searchTextField.enable();
        }
        else
        {
            searchTextField.setText("");
            searchTextField.setBackground(Color.LIGHT_GRAY);
            searchTextField.disable();
        }
    }//GEN-LAST:event_algorithimChoiceItemStateChanged

    private void sortSearchButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sortSearchButtonActionPerformed
    {//GEN-HEADEREND:event_sortSearchButtonActionPerformed
        getListBtnActionPerformed(evt);
        
        String resultsOutput[] = new String[2];
        String valueToSearch = searchTextField.getText();
        int algorithim = algorithimChoice.getSelectedIndex();
        
        if (inputTextArea.getText().equals(""))
        {
            outputTextArea.setText("");
            resultsTextArea.setText("");
            JOptionPane.showMessageDialog(inputTextArea, "There is no list to sort.", "Missing List",
            JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            if (integerRButton.isSelected())
            {
                if (algorithim < 5)
                    resultsOutput = stcInt.sort(algorithim);
                else
                {
                    try 
                    {
                        resultsOutput = stcInt.search(algorithim, Integer.valueOf(valueToSearch));
                    }
                    catch (NumberFormatException e) 
                    {
                        JOptionPane.showMessageDialog(searchTextField, "Please enter an integer.", "Invalid Input",
                        JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            else
            {
                if (algorithim < 5)
                    resultsOutput = stcStr.sort(algorithim);
                else
                    resultsOutput = stcStr.search(algorithim, valueToSearch);
            }
            resultsTextArea.setText(resultsOutput[0]);
            outputTextArea.setText(resultsOutput[1]);
        }
    }//GEN-LAST:event_sortSearchButtonActionPerformed

    private void algorithimChoiceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_algorithimChoiceActionPerformed
    {//GEN-HEADEREND:event_algorithimChoiceActionPerformed
        stcInt.setAlgorithim(algorithimChoice.getSelectedIndex());
        stcStr.setAlgorithim(algorithimChoice.getSelectedIndex());
    }//GEN-LAST:event_algorithimChoiceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SortsTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SortsTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SortsTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SortsTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SortsTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algorithimChoice;
    private javax.swing.JLabel algorithimLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton getListBtn;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JRadioButton integerRButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> listTypeBox;
    private javax.swing.JLabel listTypeLabel;
    private javax.swing.JSlider numElementsSlider;
    private javax.swing.JTextField numElementsTextBox;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JTextArea resultsTextArea;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton sortSearchButton;
    private javax.swing.JRadioButton stringRButton;
    // End of variables declaration//GEN-END:variables
}
